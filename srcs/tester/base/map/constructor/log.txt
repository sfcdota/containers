./base/map/constructor/patched.cpp:36:31: error: no member named 'first' in 'ft::Node<ft::pair<const char, int> >'
        std::cout << "fifth: " << i->first << " -> " << i->second << std::endl;
                                  ~  ^
./base/map/constructor/patched.cpp:36:53: error: no member named 'second' in 'ft::Node<ft::pair<const char, int> >'
        std::cout << "fifth: " << i->first << " -> " << i->second << std::endl;
                                                        ~  ^
In file included from ./base/map/constructor/patched.cpp:3:
../map.hpp:80:71: error: reference to type 'const ft::tree<ft::pair<const char, int>, ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > >::value_type' (aka 'const ft::pair<const char, int>') could not bind to an lvalue of type 'const ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::key_type' (aka 'const char')
    mapped_type &operator[](const key_type &k) { return tree_.GetNode(k)->data; }
                                                                      ^
./base/map/constructor/patched.cpp:16:8: note: in instantiation of member function 'ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::operator[]' requested here
  first['a']=10;
       ^
../tree.hpp:425:40: note: passing argument to parameter 'data' here
    nodeptr GetNode(const value_type & data) {
                                       ^
../tree.hpp:428:13: error: no matching function for call to object of type 'ft::tree<ft::pair<const char, int>, ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > >::value_compare' (aka 'ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_compare')
        if (compare_()(data, p->data))
            ^~~~~~~~
../map.hpp:80:63: note: in instantiation of member function 'ft::tree<ft::pair<const char, int>, ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > >::GetNode' requested here
    mapped_type &operator[](const key_type &k) { return tree_.GetNode(k)->data; }
                                                              ^
./base/map/constructor/patched.cpp:16:8: note: in instantiation of member function 'ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::operator[]' requested here
  first['a']=10;
       ^
../map.hpp:28:12: note: candidate function not viable: requires 2 arguments, but 0 were provided
      bool operator() (const value_type& x, const value_type& y) const
           ^
In file included from ./base/map/constructor/patched.cpp:3:
In file included from ../map.hpp:6:
../tree.hpp:336:23: error: called object type 'ft::Node<ft::pair<const char, int> > *' is not a function or function pointer
      return iterator(root->min()());
                      ^~~~~~~~~~~
../map.hpp:69:46: note: in instantiation of member function 'ft::tree<ft::pair<const char, int>, ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > >::tree_min' requested here
    iterator begin() { return iterator(tree_.tree_min()); };
                                             ^
./base/map/constructor/patched.cpp:21:35: note: in instantiation of member function 'ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::begin' requested here
  ft::map<char,int> second (first.begin(),first.end());
                                  ^
In file included from ./base/map/constructor/patched.cpp:3:
In file included from ../map.hpp:6:
../tree.hpp:344:23: error: called object type 'ft::Node<ft::pair<const char, int> > *' is not a function or function pointer
      return iterator(root->max()());
                      ^~~~~~~~~~~
../map.hpp:71:44: note: in instantiation of member function 'ft::tree<ft::pair<const char, int>, ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > >::tree_max' requested here
    iterator end() { return iterator(tree_.tree_max()); };
                                           ^
./base/map/constructor/patched.cpp:21:49: note: in instantiation of member function 'ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::end' requested here
  ft::map<char,int> second (first.begin(),first.end());
                                                ^
In file included from ./base/map/constructor/patched.cpp:3:
../map.hpp:58:42: error: field 'tree_' will be initialized after field 'allocator_' [-Werror,-Wreorder-ctor]
                           ::type* = 0): tree_(vc(comp)),  allocator_(alloc) {
                                         ^
./base/map/constructor/patched.cpp:21:21: note: in instantiation of function template specialization 'ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::map<ft::list_iterator<ft::bidirectional_iterator_tag, ft::pair<const char, int>, long, ft::Node<ft::pair<const char, int> > *, ft::pair<const char, int> &> >' requested here
  ft::map<char,int> second (first.begin(),first.end());
                    ^
In file included from ./base/map/constructor/patched.cpp:3:
../map.hpp:59:7: error: no matching member function for call to 'insert'
      insert(first, last);
      ^~~~~~
../map.hpp:82:14: note: candidate function not viable: no known conversion from 'ft::list_iterator<ft::bidirectional_iterator_tag, ft::pair<const char, int>, long, ft::Node<ft::pair<const char, int> > *, ft::pair<const char, int> &>' to 'const ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_type' (aka 'const pair<const char, int>') for 2nd argument
    iterator insert(iterator position, const value_type &val) { return iterator(tree_.insert(position.ptr_, val)); }
             ^
../map.hpp:84:10: note: candidate template ignored: requirement 'DetectIterator<int>::value' was not satisfied [with InputIterator = ft::list_iterator<ft::bidirectional_iterator_tag, ft::pair<const char, int>, long, ft::Node<ft::pair<const char, int> > *, ft::pair<const char, int> &>]
    void insert(InputIterator first, InputIterator last,
         ^
../map.hpp:81:26: note: candidate function not viable: requires single argument 'val', but 2 arguments were provided
    pair<iterator, bool> insert(const value_type &val) { return tree_.insert(val); }
                         ^
../map.hpp:62:7: error: no matching member function for call to 'insert'
      insert(x.begin(), x.end());
      ^~~~~~
./base/map/constructor/patched.cpp:23:21: note: in instantiation of member function 'ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::map' requested here
  ft::map<char,int> third (second);
                    ^
../map.hpp:82:14: note: candidate function not viable: no known conversion from 'ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::const_iterator' (aka 'const_list_iterator<ft::bidirectional_iterator_tag, pair<const char, int>, long, Node<pair<const char, int> > *>') to 'ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::iterator' (aka 'list_iterator<ft::bidirectional_iterator_tag, pair<const char, int>, long, Node<pair<const char, int> > *>') for 1st argument
    iterator insert(iterator position, const value_type &val) { return iterator(tree_.insert(position.ptr_, val)); }
             ^
../map.hpp:84:10: note: candidate template ignored: requirement 'DetectIterator<int>::value' was not satisfied [with InputIterator = ft::const_list_iterator<ft::bidirectional_iterator_tag, ft::pair<const char, int>, long, ft::Node<ft::pair<const char, int> > *, ft::pair<const char, int> &>]
    void insert(InputIterator first, InputIterator last,
         ^
../map.hpp:81:26: note: candidate function not viable: requires single argument 'val', but 2 arguments were provided
    pair<iterator, bool> insert(const value_type &val) { return tree_.insert(val); }
                         ^
In file included from ./base/map/constructor/patched.cpp:3:
In file included from ../map.hpp:6:
../tree.hpp:308:14: error: constructor for 'ft::tree<ft::pair<const char, int>, ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > >' must explicitly initialize the member 'compare_' which does not have a default constructor
    explicit tree(const tree &x) {
             ^
../map.hpp:61:24: note: in instantiation of member function 'ft::tree<ft::pair<const char, int>, ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > >::tree' requested here
    map(const map &x): tree_(x.tree_) {
                       ^
./base/map/constructor/patched.cpp:23:21: note: in instantiation of member function 'ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::map' requested here
  ft::map<char,int> third (second);
                    ^
../tree.hpp:97:19: note: member is declared here
    value_compare compare_;
                  ^
../map.hpp:22:11: note: 'ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_compare' declared here
    class value_compare: public binary_function<value_type, value_type, bool>  {   // in C++98, it is required to inherit binary_function<value_type,value_type,bool>
          ^
In file included from ./base/map/constructor/patched.cpp:3:
In file included from ../map.hpp:6:
../tree.hpp:298:16: error: invalid operands to binary expression ('ft::tree<ft::pair<const char, int>, ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > > *' and 'const ft::tree<ft::pair<const char, int>, ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > >')
      if (this != x) {
          ~~~~ ^  ~
../tree.hpp:309:13: note: in instantiation of member function 'ft::tree<ft::pair<const char, int>, ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > >::operator=' requested here
      *this = x;
            ^
../map.hpp:61:24: note: in instantiation of member function 'ft::tree<ft::pair<const char, int>, ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > >::tree' requested here
    map(const map &x): tree_(x.tree_) {
                       ^
./base/map/constructor/patched.cpp:23:21: note: in instantiation of member function 'ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::map' requested here
  ft::map<char,int> third (second);
                    ^
/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/allocator.h:160:7: note: candidate function not viable: no known conversion from 'ft::tree<ft::pair<const char, int>, ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > > *' to 'const std::allocator<ft::pair<const char, int> >' for 1st argument
      operator!=(const allocator&, const allocator&) _GLIBCXX_NOTHROW
      ^
../Utils.hpp:107:17: note: candidate function not viable: no known conversion from 'ft::tree<ft::pair<const char, int>, ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > > *' to 'const pair<const char, int>' for 1st argument
    friend bool operator!= (const pair<T1,T2>& lhs, const pair<T1,T2>& rhs) { return !(lhs == rhs); };
                ^
/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/postypes.h:227:5: note: candidate template ignored: could not match 'fpos<type-parameter-0-0>' against 'ft::tree<ft::pair<const char, int>, ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > > *'
    operator!=(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
    ^
/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_pair.h:461:5: note: candidate template ignored: could not match 'pair<type-parameter-0-0, type-parameter-0-1>' against 'ft::tree<ft::pair<const char, int>, ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > > *'
    operator!=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
    ^
/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_iterator.h:337:5: note: candidate template ignored: could not match 'reverse_iterator<type-parameter-0-0>' against 'ft::tree<ft::pair<const char, int>, ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > > *'
    operator!=(const reverse_iterator<_Iterator>& __x,
    ^
/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_iterator.h:375:5: note: candidate template ignored: could not match 'reverse_iterator<type-parameter-0-0>' against 'ft::tree<ft::pair<const char, int>, ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > > *'
    operator!=(const reverse_iterator<_IteratorL>& __x,
    ^
/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_iterator.h:900:5: note: candidate template ignored: could not match '__normal_iterator<type-parameter-0-0, type-parameter-0-2>' against 'ft::tree<ft::pair<const char, int>, ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > > *'
    operator!=(const __normal_iterator<_IteratorL, _Container>& __lhs,
    ^
/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/stl_iterator.h:907:5: note: candidate template ignored: could not match '__normal_iterator<type-parameter-0-0, type-parameter-0-1>' against 'ft::tree<ft::pair<const char, int>, ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > > *'
    operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
    ^
/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/ext/new_allocator.h:173:2: note: candidate template ignored: could not match 'new_allocator' against 'tree'
        operator!=(const new_allocator&, const new_allocator<_Up>&)
        ^
/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/allocator.h:174:5: note: candidate template ignored: could not match 'allocator<type-parameter-0-0>' against 'ft::tree<ft::pair<const char, int>, ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > > *'
    operator!=(const allocator<_T1>&, const allocator<_T2>&)
    ^
/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:6188:5: note: candidate template ignored: could not match 'basic_string<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2>' against 'ft::tree<ft::pair<const char, int>, ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > > *'
    operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:6201:5: note: candidate template ignored: could not match 'basic_string' against 'tree'
    operator!=(const _CharT* __lhs,
    ^
/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/basic_string.h:6213:5: note: candidate template ignored: could not match 'basic_string<type-parameter-0-0, type-parameter-0-1, type-parameter-0-2>' against 'ft::tree<ft::pair<const char, int>, ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > > *'
    operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
    ^
/usr/bin/../lib/gcc/x86_64-linux-gnu/9/../../../../include/c++/9/bits/streambuf_iterator.h:214:5: note: candidate template ignored: could not match 'istreambuf_iterator<type-parameter-0-0, type-parameter-0-1>' against 'ft::tree<ft::pair<const char, int>, ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > > *'
    operator!=(const istreambuf_iterator<_CharT, _Traits>& __a,
    ^
../iterator.hpp:121:6: note: candidate template ignored: could not match 'reverse_iterator<type-parameter-0-0>' against 'ft::tree<ft::pair<const char, int>, ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > > *'
bool operator!=(const reverse_iterator<Iterator1>& x, const reverse_iterator<Iterator2>& y) {
     ^
In file included from ./base/map/constructor/patched.cpp:3:
../map.hpp:70:52: error: 'this' argument to member function 'tree_min' has type 'const tree<ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_type, ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_compare, ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::allocator_type>' (aka 'const tree<pair<const char, int>, ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > >'), but function is not marked const
    const_iterator begin() const { return iterator(tree_.tree_min()); };
                                                   ^~~~~
../map.hpp:62:16: note: in instantiation of member function 'ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::begin' requested here
      insert(x.begin(), x.end());
               ^
./base/map/constructor/patched.cpp:23:21: note: in instantiation of member function 'ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::map' requested here
  ft::map<char,int> third (second);
                    ^
../tree.hpp:331:14: note: 'tree_min' declared here
    iterator tree_min(nodeptr n) {
             ^
../tree.hpp:332:23: error: called object type 'ft::Node<ft::pair<const char, int> > *' is not a function or function pointer
      return iterator(n->min()());
                      ^~~~~~~~
../map.hpp:70:58: note: in instantiation of member function 'ft::tree<ft::pair<const char, int>, ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > >::tree_min' requested here
    const_iterator begin() const { return iterator(tree_.tree_min()); };
                                                         ^
../map.hpp:62:16: note: in instantiation of member function 'ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::begin' requested here
      insert(x.begin(), x.end());
               ^
./base/map/constructor/patched.cpp:23:21: note: in instantiation of member function 'ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::map' requested here
  ft::map<char,int> third (second);
                    ^
In file included from ./base/map/constructor/patched.cpp:3:
../map.hpp:72:50: error: 'this' argument to member function 'tree_max' has type 'const tree<ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_type, ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_compare, ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::allocator_type>' (aka 'const tree<pair<const char, int>, ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > >'), but function is not marked const
    const_iterator end() const { return iterator(tree_.tree_max()); };
                                                 ^~~~~
../map.hpp:62:27: note: in instantiation of member function 'ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::end' requested here
      insert(x.begin(), x.end());
                          ^
./base/map/constructor/patched.cpp:23:21: note: in instantiation of member function 'ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::map' requested here
  ft::map<char,int> third (second);
                    ^
../tree.hpp:339:14: note: 'tree_max' declared here
    iterator tree_max(nodeptr n) {
             ^
../tree.hpp:340:23: error: called object type 'ft::Node<ft::pair<const char, int> > *' is not a function or function pointer
      return iterator(n->max()());
                      ^~~~~~~~
../map.hpp:72:56: note: in instantiation of member function 'ft::tree<ft::pair<const char, int>, ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > >::tree_max' requested here
    const_iterator end() const { return iterator(tree_.tree_max()); };
                                                       ^
../map.hpp:62:27: note: in instantiation of member function 'ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::end' requested here
      insert(x.begin(), x.end());
                          ^
./base/map/constructor/patched.cpp:23:21: note: in instantiation of member function 'ft::map<char, int, ft::less<char>, std::allocator<ft::pair<const char, int> > >::map' requested here
  ft::map<char,int> third (second);
                    ^
In file included from ./base/map/constructor/patched.cpp:3:
../map.hpp:80:71: error: reference to type 'const ft::tree<ft::pair<const char, int>, ft::map<char, int, bool (*)(char, char), std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > >::value_type' (aka 'const ft::pair<const char, int>') could not bind to an lvalue of type 'const ft::map<char, int, bool (*)(char, char), std::allocator<ft::pair<const char, int> > >::key_type' (aka 'const char')
    mapped_type &operator[](const key_type &k) { return tree_.GetNode(k)->data; }
                                                                      ^
./base/map/constructor/patched.cpp:30:8: note: in instantiation of member function 'ft::map<char, int, bool (*)(char, char), std::allocator<ft::pair<const char, int> > >::operator[]' requested here
  fifth['a']=10;
       ^
../tree.hpp:425:40: note: passing argument to parameter 'data' here
    nodeptr GetNode(const value_type & data) {
                                       ^
../tree.hpp:428:13: error: no matching function for call to object of type 'ft::tree<ft::pair<const char, int>, ft::map<char, int, bool (*)(char, char), std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > >::value_compare' (aka 'ft::map<char, int, bool (*)(char, char), std::allocator<ft::pair<const char, int> > >::value_compare')
        if (compare_()(data, p->data))
            ^~~~~~~~
../map.hpp:80:63: note: in instantiation of member function 'ft::tree<ft::pair<const char, int>, ft::map<char, int, bool (*)(char, char), std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > >::GetNode' requested here
    mapped_type &operator[](const key_type &k) { return tree_.GetNode(k)->data; }
                                                              ^
./base/map/constructor/patched.cpp:30:8: note: in instantiation of member function 'ft::map<char, int, bool (*)(char, char), std::allocator<ft::pair<const char, int> > >::operator[]' requested here
  fifth['a']=10;
       ^
../map.hpp:28:12: note: candidate function not viable: requires 2 arguments, but 0 were provided
      bool operator() (const value_type& x, const value_type& y) const
           ^
In file included from ./base/map/constructor/patched.cpp:3:
In file included from ../map.hpp:6:
../tree.hpp:336:23: error: called object type 'ft::Node<ft::pair<const char, int> > *' is not a function or function pointer
      return iterator(root->min()());
                      ^~~~~~~~~~~
../map.hpp:69:46: note: in instantiation of member function 'ft::tree<ft::pair<const char, int>, ft::map<char, int, bool (*)(char, char), std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > >::tree_min' requested here
    iterator begin() { return iterator(tree_.tree_min()); };
                                             ^
./base/map/constructor/patched.cpp:35:67: note: in instantiation of member function 'ft::map<char, int, bool (*)(char, char), std::allocator<ft::pair<const char, int> > >::begin' requested here
  for (ft::map<char, int, bool(*)(char,char)>::iterator i = fifth.begin(); i != fifth.end(); i++)
                                                                  ^
In file included from ./base/map/constructor/patched.cpp:3:
In file included from ../map.hpp:6:
../tree.hpp:344:23: error: called object type 'ft::Node<ft::pair<const char, int> > *' is not a function or function pointer
      return iterator(root->max()());
                      ^~~~~~~~~~~
../map.hpp:71:44: note: in instantiation of member function 'ft::tree<ft::pair<const char, int>, ft::map<char, int, bool (*)(char, char), std::allocator<ft::pair<const char, int> > >::value_compare, std::allocator<ft::pair<const char, int> > >::tree_max' requested here
    iterator end() { return iterator(tree_.tree_max()); };
                                           ^
./base/map/constructor/patched.cpp:35:87: note: in instantiation of member function 'ft::map<char, int, bool (*)(char, char), std::allocator<ft::pair<const char, int> > >::end' requested here
  for (ft::map<char, int, bool(*)(char,char)>::iterator i = fifth.begin(); i != fifth.end(); i++)
                                                                                      ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
